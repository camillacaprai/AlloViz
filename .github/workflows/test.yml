name: Python Package using Conda

on:
  push:
    branches:
      - reg_test
      - fix_submodules

jobs:
  miniconda:
    name: Miniconda ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: ["ubuntu", "macos"] #, "windows"
    defaults:
      run:
        shell: bash -el {0}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        miniforge-version: latest
        activate-environment: anaconda-client-env
        use-mamba: true
    - name: Cache Conda env
      uses: actions/cache@v3
      with:
        path: ${{ env.CONDA }}/envs
        key:
          conda-${{ runner.os }}--${{ runner.arch }}-${{ hashFiles('dev/dev_env.yml') }}-${{ env.CACHE_NUMBER }}
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      id: cache
    - name: Update environment
      run:
        mamba env update -n anaconda-client-env -f dev/dev_env.yml
      if: steps.cache.outputs.cache-hit != 'true'

    # - uses: conda-incubator/setup-miniconda@v2
    #   with:
    #     activate-environment: test
    #     channels: conda-forge
    #     environment-file: dev/dev_env.yml
    #     # python-version: "3.10"
    #     auto-activate-base: false
    - name: Install AlloViz
      run: pip install .

    # - name: Lint with flake8
    #   run: |
    #     conda install flake8
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: pytest test